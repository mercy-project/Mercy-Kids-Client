plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    def ext = rootProject.extensions.ext
    compileSdkVersion ext.android.compileSdk
    buildToolsVersion ext.android.buildToolsVersion

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        applicationId ext.android.id
        versionName ext.android.versionName
        versionCode ext.android.versionCode
        minSdkVersion ext.android.minSdk
        targetSdkVersion ext.android.targetSdk
        multiDexEnabled true

        ndk {
            abiFilters("armeabi-v7a", "x86", "arm64-v8a", "x86_64")
        }

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileOptions {
        sourceCompatibility(ext.compiler.javaVersion)
        targetCompatibility(ext.compiler.javaVersion)
    }

    /*
    signingConfigs {
        release {
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(rootProject.file("keystore/release-keystore.properties")))
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

        debug {
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(rootProject.file("keystore/debug-keystore.properties")))
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
     */

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            aaptOptions.cruncherEnabled = false // png 크기를 줄이기위해
            splits.abi.enable = false
            splits.density.enable = false // 화면밀도나 abi 에 따라 여러개의 apk 가 생성되는데 디버그 때 이를 해제
            signingConfig signingConfigs.debug

            /*
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
             */
        }
        release {
            debuggable false
            minifyEnabled false
            /*signingConfig signingConfigs.release*/
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation platform("com.google.firebase:firebase-bom:$firebasebom")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    implementation project(":base")
    implementation project(":component")
    implementation project(":remote")
    implementation project(":repository")

    implementation diDependencies
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    kapt diCompilerDependencies

    implementation networkDependencies
    kapt networkCompilerDependencies

    implementation kotlinDependencies
    implementation androidComponentDependncies
    implementation flowBindingDependencies
    implementation uiDependencies
    implementation navigationDependencies
    implementation firebaseDependencies

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation testDependencies
}